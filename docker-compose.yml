version: "3.8"

services:
  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    container_name: blog_postgres_db
    environment:
      POSTGRES_DB: blogdb
      POSTGRES_USER: bloguser
      POSTGRES_PASSWORD: blogpass123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - blog_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bloguser -d blogdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend Service
  backend:
    build:
      context: ./Blog
      dockerfile: Dockerfile
    container_name: blog_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./Blog:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://bloguser:blogpass123@db:5432/blogdb
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
    depends_on:
      db:
        condition: service_healthy
    networks:
      - blog_network

  # React Frontend Service
  frontend:
    build:
      context: ./blog-frontend
      dockerfile: Dockerfile
    container_name: blog_frontend
    volumes:
      - ./blog-frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - blog_network
    stdin_open: true
    tty: true

# Named volumes for persistent storage
volumes:
  postgres_data:
    driver: local

# Custom network for container communication
networks:
  blog_network:
    driver: bridge
