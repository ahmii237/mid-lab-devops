{"ast":null,"code":"var _jsxFileName = \"/home/nikan/Documents/Project3.0/blog-frontend/src/PostDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetailPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the post ID from the URL\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    fetch(`http://127.0.0.1:8000/posts/${id}/`) // Fetch specific post by ID from API\n    .then(response => response.json()).then(data => {\n      setPost(data); // Update state with the fetched post\n    }).catch(error => console.error('Error fetching post:', error));\n  }, [id]);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDetailPage, \"6+b5eOm0C2EIwwbuXxVLhmPamew=\", false, function () {\n  return [useParams];\n});\n_c = PostDetailPage;\nexport default PostDetailPage;\nvar _c;\n$RefreshReg$(_c, \"PostDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","PostDetailPage","_s","id","post","setPost","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","body","_c","$RefreshReg$"],"sources":["/home/nikan/Documents/Project3.0/blog-frontend/src/PostDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst PostDetailPage = () => {\n  const { id } = useParams(); // Get the post ID from the URL\n  const [post, setPost] = useState(null);\n\n  useEffect(() => {\n    fetch(`http://127.0.0.1:8000/posts/${id}/`)  // Fetch specific post by ID from API\n      .then(response => response.json())\n      .then(data => {\n        setPost(data);  // Update state with the fetched post\n      })\n      .catch(error => console.error('Error fetching post:', error));\n  }, [id]);\n\n  if (!post) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h1>{post.title}</h1>\n      <p>{post.body}</p>\n      {/* Future feature: Display comments */}\n    </div>\n  );\n};\n\nexport default PostDetailPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,+BAA+BH,EAAE,GAAG,CAAC,CAAE;IAAA,CAC1CI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZL,OAAO,CAACK,IAAI,CAAC,CAAC,CAAE;IAClB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,IAAI,EAAE,oBAAOJ,OAAA;IAAAc,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEvC,oBACElB,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAKV,IAAI,CAACe;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBlB,OAAA;MAAAc,QAAA,EAAIV,IAAI,CAACgB;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEV,CAAC;AAAChB,EAAA,CAtBID,cAAc;EAAA,QACHH,SAAS;AAAA;AAAAuB,EAAA,GADpBpB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}